# Default values for deploy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  plain:
    environment: stage # production
    baseUrl: drupal.web.lwb.local
    dbExternal: false
    dbTZ: "Europe/Berlin"
    dbIP: 127.0.0.1
    dbPort: "3306"
    dbUser: "user"
    dbDatabase: "db"
  secret:
    dbPassword: "changeme"
  createSecret: true
  imageCredentials:
    createSecret: true

env: 
  plain:
    dbCoreHost: locahost
    dbCorePort: "3306"
    dbCoreUser: "core"
    dbCoreDatabase: "core"
    composerMemoryLimit: "-1"
    hashSalt: ""
    relay: "mail.lwb.local"
  secret:
    dbCorePassword: "changeme"

image:
  repository: "drupal"
  pullPolicy: IfNotPresent
  tag: "9"

imagePullSecrets:
  - name: registry.gitlab.com

nameOverride: ""
fullnameOverride: ""

app: 
  port: 80

storage: 
  public: 4Gi
  private: 4Gi
  import: 20Gi
  backup: 20Gi

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
#  app.gitlab.com/app: ANNOTATION_APP
#  app.gitlab.com/env: ANNOTATION_ENV 

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  tls: true
  path: /
  pathType: ImplementationSpecific
  className: ""
  annotations: {
    cert-manager.io/cluster-issuer: ca-issuer,
    traefik.ingress.kubernetes.io/router.middlewares: "default-redirect-https@kubernetescrd, kube-system-traefik-forward-auth@kubernetescrd"
  }

resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  enabled: true
  path: /user/login
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 30
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  enabled: true
  path: /user/login
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 30
  failureThreshold: 6
  successThreshold: 1

backup:
  enabled: false
  schedule: "0 21 * * *"

  image:
    repository: "elcom/drupal9-php7.4"
    pullPolicy: Always
    tag: "backup"

  resources: {}
  #  limits:
  #    cpu: 1
  #    memory: 1Gi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

import:
  enabled: true

  image:
    repository: "elcom/drupal9-php7.4"
    pullPolicy: Always
    tag: "import"

cron:
  morning:
    enabled: true
    schedule: "0 6 * * *"
    jobs:
      - "cdi:core:import"
      - "locale:check -y"
      - "locale:update -y"
      - "cache:rebuild"
    resources: {}
  evening:
    enabled: false
    schedule: "0 20 * * *"
    jobs:
      - "core:cron"
    resources: {}
  everycron:
    enabled: true
    schedule: "0/10 * * * *"
    jobs:
      - "core:cron"
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 16Mi

upgrade:
  enabled: true
  jobs:
    - "updatedb --yes"
    - "config:import --yes"
    - "cache:rebuild"
  annotations: {
    "helm.sh/hook": post-upgrade,
    "helm.sh/hook-weight": "0",
    "helm.sh/hook-delete-policy": hook-succeeded
  }

nodeSelector: {}

tolerations: []

affinity: {}
