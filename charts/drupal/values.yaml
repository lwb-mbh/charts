# Default values for deploy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  plain:
    environment: stage # production
    baseUrl: drupal.web.lwb.local
    dbExternal: false
    dbIP: 127.0.0.1
    dbPort: "3306"
    dbUser: "user"
    dbDatabase: "db"
  secret:
    dbPassword: "changeme"
  imageCredentials: {}
  createSecret: true

env: 
  plain:
    dbCoreHost: locahost
    dbCorePort: "3306"
    dbCoreUser: "core"
    dbCoreDatabase: "core"
    relay: "mail.lwb.local"
  secret:
    hashSalt: ""
    dbCorePassword: "changeme"

replicaCount: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

image:
  repository: "registry.gitlab.com/lwb-web/docker/library/base/drupal"
  pullPolicy: Always
  tag: "9-php8.1-apache"

nameOverride: ""
fullnameOverride: ""

app: 
  port: 8080

storage: 
  className: "nfs-client"
  public: 4Gi
  private: 4Gi
  backupClassName: "backup.smb"
  backup: 20Gi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 33

securityContext: {}
#  capabilities:
#    drop: ["ALL"]
#  privileged: false
#  allowPrivilegeEscalation: false
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  tls: true
  path: /
  pathType: ImplementationSpecific
  className: ""
  annotations: {
    cert-manager.io/cluster-issuer: lwb-issuer,
    traefik.ingress.kubernetes.io/router.middlewares: "default-redirect-https@kubernetescrd"
  }

resources:
  limits:
    cpu: 200m
    memory: 768Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  enabled: true
  path: /user/login
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 30
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  enabled: true
  path: /user/login
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 30
  failureThreshold: 6
  successThreshold: 1

backup:
  enabled: false
  schedule: "0 21 * * *"

  image:
    repository: "registry.gitlab.com/lwb-web/docker/library/extend/drupal-backup"
    pullPolicy: Always
    tag: "3.17"

  resources: {}
  #  limits:
  #    cpu: 1
  #    memory: 1Gi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

cron:
  morning:
    enabled: true
    schedule: "45 6 * * *"
    jobs:
      - "cdi:core:import"
      - "locale:check -y"
      - "locale:update -y"
      - "cache:rebuild"
    resources: {}
  evening:
    enabled: false
    schedule: "0 20 * * *"
    jobs:
      - "core:cron"
    resources: {}
  everycron:
    enabled: true
    schedule: "0/10 * * * *"
    jobs:
      - "core:cron"
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 16Mi

upgrade:
  enabled: true
  jobs:
    - "updatedb --yes"
    - "config:import --yes"
    - "cache:rebuild"
  annotations: {
    "helm.sh/hook": post-upgrade,
    "helm.sh/hook-weight": "0",
    "helm.sh/hook-delete-policy": before-hook-creation
  }

nodeSelector: {}

tolerations: []

affinity: {}
