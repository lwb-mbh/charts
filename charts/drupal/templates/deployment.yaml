apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deploy.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "deploy.labels" . | nindent 4 }}
  {{- with .Values.podAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy: 
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "drupal.deploy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "drupal.deploy.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "deploy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: drupal-public
            mountPath: /opt/drupal/web/sites/default/files
            subPath: drupal-public
          - name: drupal-private
            mountPath: /opt/drupal/private/files
            subPath: drupal-private
          ports:
            - name: http
              containerPort: {{ .Values.app.port }}
              protocol: TCP            
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          {{- include "helpers.list-drupal-env-variables" . | indent 12 }}
          envFrom:
          - secretRef:
              name: {{ include "deploy.secrets" . }}
      initContainers:
        {{- if not .Values.global.plain.dbExternal }}
        - name: wait-for-mariadb
          image: bitnami/kubectl
          command: 
            - /bin/bash
            - -c
            - |
              until ! kubectl get pods -l job-name={{ $.Release.Name }}-mariadb-import -o=jsonpath='{.items[0].metadata.name}' -n {{ $.Release.Namespace }} &> /dev/null
              do
                echo 'sleep'
                sleep 5
              done
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: drupal-public
        persistentVolumeClaim:
          claimName: pvc
      - name: drupal-private
        persistentVolumeClaim:
          claimName: pvc